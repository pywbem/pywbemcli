// This file defines a set of qualifiers declarations, classes and associations
// that relate the member of family.
// It is assumed that the entire model exists in a single namespace.

Qualifier Association : boolean = false,
    Scope(association),
    Flavor(DisableOverride, ToSubclass);

Qualifier Description : string = null,
    Scope(any),
    Flavor(EnableOverride, ToSubclass, Translatable);

Qualifier In : boolean = true,
    Scope(parameter),
    Flavor(DisableOverride, ToSubclass);

Qualifier Key : boolean = false,
    Scope(property, reference),
    Flavor(DisableOverride, ToSubclass);

Qualifier Out : boolean = false,
    Scope(parameter),
    Flavor(DisableOverride, ToSubclass);

Qualifier ValueMap : string[],
    Scope(property, method, parameter);

Qualifier Values : string[],
    Scope(property, method, parameter),
    Flavor(EnableOverride, ToSubclass, Translatable);

class TST_Person{
        [Key, Description ("This is key prop")]
    string name;
    string extraProperty = "defaultvalue";
        [ValueMap {"1", "2"}, Values {"female", "male"}]
    uint16 gender;
};

// NOTE: classname uses lower case s in sub.  Instance names use upper case
// This is good test of case insensitivity for class names.
class TST_Personsub : TST_Person{
    string secondProperty = "empty";
    uint32 counter;
};

[Association, Description(" Lineage defines the relationship "
    "between parents and children.") ]
class TST_Lineage {
    [key] string InstanceID;
    TST_Person ref parent;
    TST_Person ref child;
};

[Association, Description(" Family gathers person to family.") ]
class TST_MemberOfFamilyCollection {
   [key] TST_Person ref family;
   [key] TST_Person ref member;
};

[ Description("Collection of Persons into a Family") ]
class TST_FamilyCollection {
        [Key, Description ("This is key prop and family name")]
    string name;
};

// Define instances of TST_Person

instance of TST_Person as $Mike { name = "Mike"; gender = 2; };
instance of TST_Person as $Saara { name = "Saara"; gender = 1; };
instance of TST_Person as $Sofi { name = "Sofi"; gender = 1; };
instance of TST_Person as $Gabi{ name = "Gabi"; gender = 1; };

// Define instances of the TST_PersonSub
instance of TST_PersonSub as $Mikesub{ name = "Mikesub";
                            gender = 2;
                            secondProperty = "one" ;
                            counter = 1; };

instance of TST_PersonSub as $Saarasub { name = "Saarasub";
                            gender = 1;
                            secondProperty = "two" ;
                            counter = 2; };

instance of TST_PersonSub as $Sofisub{ name = "Sofisub";
                            gender = 1;
                            secondProperty = "three" ;
                            counter = 3; };

instance of TST_PersonSub as $Gabisub{ name = "Gabisub";
                            gender = 1;
                            secondProperty = "four" ;
                            counter = 4; };

// Define instances of TST_Lineage

instance of TST_Lineage as $MikeSofi
{
    InstanceID = "MikeSofi";
    parent = $Mike;
    child = $Sofi;
};

instance of TST_Lineage as $MikeGabi
{
    InstanceID = "MikeGabi";
    parent = $Mike;
    child = $Gabi;
};

instance of TST_Lineage  as $SaaraSofi
{
    InstanceID = "SaaraSofi";
    parent = $Saara;
    child = $Sofi;
};

// Define instances of TST_FamilyCollection

instance of TST_FamilyCollection as $Family1
{
    name = "family1";
};

instance of TST_FamilyCollection as $Family2
{
    name = "Family2";
};


instance of TST_MemberOfFamilyCollection as $SofiMember
{
    family = $Family1;
    member = $Sofi;
};

instance of TST_MemberOfFamilyCollection as $GabiMember
{
    family = $Family1;
    member = $Gabi;
};

instance of TST_MemberOfFamilyCollection as $MikeMember
{
    family = $Family2;
    member = $Mike;
};
